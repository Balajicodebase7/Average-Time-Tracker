apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-time-tracker-deployment
  labels:
    app: task-time-tracker
spec:
  replicas: 2 # Start with 2 replicas for availability
  selector:
    matchLabels:
      app: task-time-tracker
  template:
    metadata:
      labels:
        app: task-time-tracker
    spec:
      containers:
        - name: task-time-tracker
          image: task-time-tracker:latest # Your Docker image
          imagePullPolicy: IfNotPresent # Or Always if using a remote registry and :latest
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness # Requires Spring Boot Actuator
              port: 8080
            initialDelaySeconds: 60 # Time to wait before first probe
            periodSeconds: 10     # How often to probe
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness # Requires Spring Boot Actuator
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m" # 0.25 CPU core
            limits:
              memory: "1Gi"
              cpu: "500m" # 0.5 CPU core
          volumeMounts:
            - name: task-data
              mountPath: /data # Mount the volume to /data where H2 stores its file
      volumes:
        - name: task-data
          emptyDir: {} # Data persists for the life of the Pod
                       # For persistence across Pod restarts/evictions, use a PersistentVolumeClaim