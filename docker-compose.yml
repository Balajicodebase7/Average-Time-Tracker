version: '3.8' 

services:
  # MySQL Database Service
  mysql_db:
    image: mysql:8.0 
    container_name: tasktracker_mysql 
    environment:
      MYSQL_ROOT_PASSWORD: your_root_password_change_me! 
      MYSQL_DATABASE: tasktrackerdb                     
      MYSQL_USER: taskuser                              
      MYSQL_PASSWORD: securepassword                    
      MYSQL_ALLOW_EMPTY_PASSWORD: 'no' 
    ports:
      - "3310:3306" # Maps MySQL port from container (3306) to host machine (3310)
                    # This allows you to connect to MySQL from the host 
    volumes:
      - mysql_data:/var/lib/mysql 
    healthcheck: # Ensures MySQL is fully ready before the dependent 'app' service starts
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] # Command to check MySQL status
      timeout: 10s 
      retries: 5 
      start_period: 30s 

  # Spring Boot Application Service
  app:
    build: . # Tells Docker Compose to build the image for this service using the Dockerfile in the current directory
    container_name: tasktracker_app # A readable name for your application container
    ports:
      - "9000:9000" # Maps your application's port from container (9000) to your host machine (9000)
    environment:
      # These environment variables override the properties in application.properties
      # They point to the 'mysql_db' service's name within the Docker Compose internal network.
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/tasktrackerdb?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: taskuser
      SPRING_DATASOURCE_PASSWORD: securepassword
    depends_on: # Defines dependencies; 'app' will only start after 'mysql_db' is up and healthy
      mysql_db:
        condition: service_healthy # Ensures 'mysql_db' passes its health check before 'app' starts

volumes:
  mysql_data: # Define the named volume to ensure data persistence for MySQL